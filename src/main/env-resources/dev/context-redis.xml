<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="
            http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <!-- 最大空闲连接数量 -->
        <property name="maxIdle" value="${redis.pool.maxIdle}"/>
        <!-- 池中持有的最大连接数量 -->
        <property name="maxTotal" value="${redis.pool.maxActive}"/>
        <!-- borrowObject 方法的最大等待时间 -->
        <property name="maxWaitMillis" value="${redis.pool.maxWaitMillis}"></property>
        <property name="testOnBorrow" value="${redis.pool.testOnBorrow}"/>
        <property name="testOnReturn" value="${redis.pool.testOnReturn}"/>
    </bean>

   <!-- <bean id="redisSentinelConfiguration"
          class="org.springframework.data.redis.connection.RedisSentinelConfiguration">
        <property name="master">
            <bean class="org.springframework.data.redis.connection.RedisNode">
                <property name="name" value="${redis.sentinel.master}">
                </property>
            </bean>
        </property>
        <property name="sentinels">
            <set>
                <bean class="org.springframework.data.redis.connection.RedisNode">
                    <constructor-arg name="host" value="${redis.sentinel.host1}" />
                    <constructor-arg name="port" value="${redis.sentinel.port}" />
                </bean>
                <bean class="org.springframework.data.redis.connection.RedisNode">
                    <constructor-arg name="host" value="${redis.sentinel.host2}" />
                    <constructor-arg name="port" value="${redis.sentinel.port}" />
                </bean>
            </set>
        </property>
    </bean>-->

    <bean id="connectionFactory"
    class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
    p:host-name="${redis.host}"
    p:port="${redis.port}"
    p:password="${redis.pass}"
    p:database="${redis.database}"
    p:pool-config-ref="poolConfig"/>

  <!--  <bean id="connectionFactory"
          class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
          p:password="${redis.sentinel.pass}">
        <constructor-arg ref="redisSentinelConfiguration"/>
        <constructor-arg name="poolConfig" ref="poolConfig"/>
    </bean>-->

    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
        <property name="connectionFactory" ref="connectionFactory"/>
    </bean>



    <bean id="redisTemplateSpring" class="org.springframework.data.redis.core.StringRedisTemplate">
        <property name="connectionFactory" ref="connectionFactory"/>
    </bean>

    <bean class="com.qunar.qchat.admin.util.RedisUtil">
        <property name="redisTemplate" ref="redisTemplateSpring"/>
    </bean>

</beans>